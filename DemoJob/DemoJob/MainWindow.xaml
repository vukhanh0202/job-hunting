<Window x:Class="DemoJob.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
         xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DemoJob" 
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        DataContext="{StaticResource MainVM}"
        FontFamily="{DynamicResource MaterialDesignFont}" 
        Icon="Picture/LOGOMAIN.ico"
        Title="Màn hình chính" Height="900" Width="1400" WindowStartupLocation="CenterScreen" 
        Name ="mainWindow" Background="#f8f4e9" Foreground="#212A37">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedWindowCommand}"
                                   CommandParameter="{Binding ElementName=mainWindow}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <Style TargetType="TextBlock" x:Key="InfoJob"  >
            <Setter Property="TextAlignment" Value="Left"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Margin" Value="5 0 0 0"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="Height" Value="auto"></Setter>
            <Setter Property="Foreground" Value="#212A37"></Setter>
        </Style>
        <Style x:Key="textblockdock" TargetType="TextBlock"  >
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="FontSize" Value="25"></Setter>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="Foreground" Value="#212A37"></Setter>
        </Style>
        <Style x:Key="tbl" TargetType="TextBlock"  >
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="Opacity" Value="0.7"></Setter>
            <Setter Property="Foreground" Value="#212A37"></Setter>
        </Style>
        <Style TargetType="Button" x:Key="btnSave">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Opacity" Value="0.9"></Setter>
                    <Setter Property="Foreground" Value="Red"></Setter>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Opacity" Value="0.9"></Setter>
            <Setter Property="Foreground" Value="#212A37"></Setter>
        </Style>
        <Style TargetType="Button" x:Key="btnXoaLoc">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#FE642E"/>
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock TextDecorations="Underline" Text="{TemplateBinding Content}"/>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="Blue"></Setter>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="Opacity" Value="0.7"></Setter>
            <Setter Property="Foreground" Value="#212A37"></Setter>
        </Style>
        <Style TargetType="ComboBox" x:Key="cbStackPanel">
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="Width" Value="340"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="FontSize" Value="25"></Setter>
            <Setter Property="Margin" Value="-1 0 0 0"></Setter>
            <Setter Property="Foreground" Value="#212A37"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="7*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border"  Grid.ColumnSpan="2" Background="White" BorderBrush="Black" BorderThickness="0" />
                                            <Border Grid.Column="0" Background="White"  BorderBrush="Black" BorderThickness="0" />
                                            <Path x:Name="Arrow" Grid.Column="1"  Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="#CEF6D8" />
                                            </Trigger>
                                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="#CEF6D8" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3 4 0 0"  />
                            <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                                <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="White" />
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>
        <Style TargetType="materialDesign:PackIcon" x:Key="icon">
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Height" Value="36"></Setter>
            <Setter Property="Width" Value="40"></Setter>
            <Setter Property="Foreground" Value="#212A37"></Setter>
        </Style>
        <Style TargetType="ComboBox" x:Key="Loc">
            <Setter Property="MinWidth" Value="150"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="Foreground" Value="#212A37"></Setter>
            <Setter Property="Template">


                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="7*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border"  Grid.ColumnSpan="2" Background="White" BorderBrush="Black" BorderThickness="0" />
                                            <Border Grid.Column="0" Background="White"  BorderBrush="White" BorderThickness="0" />
                                            <Path x:Name="Arrow" Grid.Column="1"  Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="#CEF6D8" />
                                            </Trigger>
                                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="#FFE6E6E6" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3 4 0 0"  />
                            <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Fade">
                                <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="White" Width="150"/>
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="SnackBar">
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Background" Value="#212A37"></Setter>
        </Style>
        <Style TargetType="Expander" x:Key="ex">

        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="81"></RowDefinition>
            <RowDefinition Height="74*"></RowDefinition>
            <RowDefinition Height="38*"></RowDefinition>
            <RowDefinition Height="73*"></RowDefinition>
            <RowDefinition Height="603*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid >
            <DockPanel   Grid.Row="0" LastChildFill="False" Background="#212A37">
                <Image Margin="10 0 0 0" Source="Picture/LOGOMAIN.png" DockPanel.Dock="Left"></Image>
               

                <Button 
                     Command="{Binding LogOutCommand,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}"
                    CommandParameter="{Binding ElementName=mainWindow}"
                    Width="100" Style="{StaticResource SnackBar}" DockPanel.Dock="Right" Margin="0 0 10 0" IsCancel="True">
                    <StackPanel>
                        <materialDesign:PackIcon Kind="Export" Height="30" Width="30" Margin="15 0 0 0"/>
                        <TextBlock Text="Đăng xuất"></TextBlock>
                    </StackPanel>
                </Button>
                <Button  Command="{Binding InformationMemberCommand}"
                    Width="100" Style="{StaticResource SnackBar}" DockPanel.Dock="Right" Margin="0 0 10 0">
                    <StackPanel>
                        <Image Source="Picture/account.png" Height="30" Width="30"  Margin="0 0 0 0"  ></Image>
                        <TextBlock Text="Hồ sơ cá nhân"></TextBlock>
                    </StackPanel>
                </Button>



                <StackPanel>

                </StackPanel>
            </DockPanel>
           
        </Grid>
        <Grid Grid.Row="1" Background="#3a4c71" Margin="0,0,0,5" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Border Height="40" Grid.Column="0" Margin="10 14 6 14" BorderThickness="3" CornerRadius="5" BorderBrush="Beige" Width="380">
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Magnify" Style="{StaticResource icon}" Margin="-1 0 0 0" ToolTip="Ghi có dấu nếu là tiếng việt"/>
                    <Grid Height="40" Width="340" Background="White" Margin="-1 0 0 0">
                        <TextBox Height="30" Width="330" Background="White" Margin="5 0 15 0"
                              materialDesign:HintAssist.Hint="Nhập chức danh, vị trí, kĩ năng,..." FontSize="16"
                                Text="{Binding SearchTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"     
                                 >
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding SearchCommand}" Key="Enter" />
                                <KeyBinding Command="{Binding SearchCommand}" Key="Return" />
                            </TextBox.InputBindings>
                        </TextBox>
                    </Grid>
                </StackPanel>
            </Border>
            <Border Height="40" Grid.Column="1" Margin="10 14 6 14" BorderThickness="3" CornerRadius="5" BorderBrush="Beige" Width="380">
                <StackPanel Grid.Column="1" Orientation="Horizontal"  >

                    <materialDesign:PackIcon Kind="FormatListBulleted" Style="{StaticResource icon}" Margin="-1 0 0 0"  />

                    <ComboBox Style="{StaticResource cbStackPanel}"
                                  SelectedValue="{Binding SelectedItemMajor}"
                                  Background="White"
                                  ItemsSource="{Binding Path=MajorList}">

                    </ComboBox>
                </StackPanel>
            </Border>
            <Border Height="40" Grid.Column="2" Margin="10 14 6 14" BorderThickness="3" CornerRadius="5" BorderBrush="Beige" Width="380">
                <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="MapMarker" Style="{StaticResource icon}"  Margin="-1 0 0 0"  />
                    <ComboBox Style="{StaticResource cbStackPanel}"
                              SelectedValue="{Binding SelectedItemPlace}"
                             Background="White" 
                          
                              ItemsSource="{Binding Path=PlaceList}">

                    </ComboBox>
                </StackPanel>
            </Border>
            <Button Grid.Column="3" Height="Auto" Background="#F77839" Margin="15,17,15,17"
                    BorderBrush="#FFE49049"
                    Content="Tìm kiếm" FontSize="24"
                    Command="{Binding SearchCommand}" IsDefault="True"/>
        </Grid>
        <DockPanel Grid.Row="2" LastChildFill="False" Background="White" Margin="0,0,0,2" >
            <TextBlock Margin="15 0 0 0" Style="{StaticResource tbl}" Text="Lọc theo: "></TextBlock>
            <TextBlock Margin="25 0 0 0" Style="{StaticResource tbl}" Text="Tính chất công việc: "></TextBlock>
            <ComboBox Text="123123"  FontSize="20"  Style="{StaticResource Loc}" SelectedValue="{Binding ValueFilterByNature, UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}">
                <ComboBoxItem Content="Toàn thời gian"></ComboBoxItem>
                <ComboBoxItem Content="Bán thời gian"></ComboBoxItem>
                <ComboBoxItem Content="Thực tập"></ComboBoxItem>
                <ComboBoxItem Content="Online"></ComboBoxItem>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Filter}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <TextBlock Margin="50 0 0 0" Style="{StaticResource tbl}" Text="Mức lương: " ></TextBlock>
            <ComboBox  FontSize="20"  Style="{StaticResource Loc}" SelectedValue="{Binding ValueFilterBySalary, UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}">
                <ComboBoxItem Content="≤ $500"></ComboBoxItem>
                <ComboBoxItem Content="$500 - $1000"></ComboBoxItem>
                <ComboBoxItem Content="$1000 - $1500"></ComboBoxItem>
                <ComboBoxItem Content="$1500 - $2000"></ComboBoxItem>
                <ComboBoxItem Content="$2000 - $3000"></ComboBoxItem>
                <ComboBoxItem Content="≥ $3000"></ComboBoxItem>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Filter}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <ComboBox DockPanel.Dock="Right" FontSize="20" Margin="0,0,15,0" Width="168" SelectedValue="{Binding ValueSort}" Style="{StaticResource Loc}">
                <ComboBoxItem Content="Ngày tăng dần"></ComboBoxItem>
                <ComboBoxItem Content="Ngày giảm dần"></ComboBoxItem>
                <ComboBoxItem Content="Lương tăng dần"></ComboBoxItem>
                <ComboBoxItem Content="Lương giảm dần"></ComboBoxItem>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SortCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <TextBlock Style="{StaticResource tbl}" DockPanel.Dock="Right" Text="Xếp theo: "></TextBlock>
            <Button Style="{StaticResource btnXoaLoc}" DockPanel.Dock="Left" Content="Xoá lọc" Margin="40 3 0 0"
                    Command="{Binding DeleteFilterCommand}">

            </Button>
        </DockPanel>
        <DockPanel  Margin="0,13,0,10"  Background="White" Grid.Row="3" VerticalAlignment="Center" LastChildFill="False" Height="50">
            <TextBlock Style="{StaticResource textblockdock}" Margin="20 0 0 0" DockPanel.Dock="Left" Text="{Binding QuatityJob,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}"></TextBlock>
            <TextBlock Style="{StaticResource textblockdock}" Margin="5 0 0 0" DockPanel.Dock="Left" Text="CÔNG VIỆC ĐÃ TÌM THẤY" ></TextBlock>
            <ToggleButton x:Name="SaveToggle" Margin="5 0 15 0" DockPanel.Dock="Right" Width="50"
                Style="{StaticResource MaterialDesignSwitchToggleButton}"
                          
                           Command="{Binding ShowCommand}"
                           CommandParameter="{Binding Path=SaveToggle}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction  Command="{Binding ShowSaveJobCommand}"
                          CommandParameter="{Binding ElementName=SaveToggle}">
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction  Command="{Binding HideSaveJobCommand}"
                         CommandParameter="{Binding ElementName=SaveToggle}">
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ToggleButton>
            <TextBlock Style="{StaticResource textblockdock}" Margin="5 0 0 0" DockPanel.Dock="Right" Text="Công việc đã lưu" ></TextBlock>
            <TextBlock Style="{StaticResource textblockdock}" Margin ="5 0 25 0" DockPanel.Dock="Right" Text="công việc đã lưu"></TextBlock>
            <TextBlock Style="{StaticResource textblockdock}" Margin ="5 0 0 0" DockPanel.Dock="Right" Text="{Binding SaveQuatityJob,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}"></TextBlock>

            <materialDesign:PackIcon   Kind="Heart" DockPanel.Dock="Right" VerticalAlignment="Center" Width="45" Height="45" />

        </DockPanel>
        <Grid Grid.Row="4" Margin="50,20,50,20">
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <ItemsControl x:Name="ListJob" ItemsSource="{Binding JobList}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel  Orientation="Vertical"></StackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border BorderThickness="1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="75*"></ColumnDefinition>
                                        <ColumnDefinition Width="543*"></ColumnDefinition>
                                        <ColumnDefinition Width="70*"></ColumnDefinition>
                                        <ColumnDefinition Width="70*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <!--Logo-->
                                    <Border Grid.Column="0" Background="White" BorderThickness="0 0 0.5 0" BorderBrush="Black">
                                        <Image Margin="10" Grid.Column="0" Source="{Binding Link}" Stretch="Uniform" >

                                        </Image>
                                    </Border>

                                    <!--Thông tin-->
                                    <Grid Grid.Column="1">
                                        <Grid.Background>
                                            <SolidColorBrush Color="White" Opacity="0.9"/>
                                        </Grid.Background>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="20*"></RowDefinition>
                                            <RowDefinition Height="8*"></RowDefinition>
                                            <RowDefinition Height="19*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <TextBlock Padding="10" Grid.Row="0" TextAlignment="Left" VerticalAlignment="Center"
                                               Text="{Binding Title}"
                                               FontSize="30" TextWrapping="WrapWithOverflow" Height="auto" Foreground="#212A37" >

                                        </TextBlock>
                                        <!--<TextBlock FontWeight="Medium" TextAlignment="Left" VerticalAlignment="Center"
                                                Text="{Binding Title}"
                                               Margin="10 0 0 0" FontSize="16" Height="20" Grid.Row="1" >
                                        </TextBlock>-->
                                        <Grid Grid.Row="2">
                                            <Grid.RowDefinitions>
                                                <RowDefinition></RowDefinition>
                                                <RowDefinition></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <WrapPanel Grid.Row="0">
                                                <TextBlock Padding="10 0 0 0" Opacity="0.7" Style="{StaticResource InfoJob}" Text="Loại hình:" HorizontalAlignment="Left"  ></TextBlock>
                                                <Border Padding="0 0 10 0" BorderThickness="0,0,2,0" BorderBrush="#FFBDBDBD" >
                                                    <TextBlock Style="{StaticResource InfoJob}" Text="{Binding TypeJob}" ></TextBlock>
                                                </Border>
                                                <TextBlock Padding="10 0 0 0" Opacity="0.7" Text="Khu vực:" Style="{StaticResource InfoJob}" ></TextBlock>
                                                <Border Padding="0 0 10 0" BorderThickness="0,0,2,0" BorderBrush="#FFBDBDBD" >
                                                    <TextBlock Style="{StaticResource InfoJob}" Text="{Binding Place}" ></TextBlock>
                                                </Border>
                                                <TextBlock Padding="10 0 0 0" Opacity="0.7" Text="Lương: " Style="{StaticResource InfoJob}" ></TextBlock>
                                                <TextBlock Style="{StaticResource InfoJob}" Foreground="#F77839" Text="{Binding Salary}" ></TextBlock>
                                            </WrapPanel>
                                            <WrapPanel Grid.Row="1">
                                                <TextBlock Padding="10 0 0 0" Opacity="0.7" Style="{StaticResource InfoJob}" Text="Chuyên môn:" HorizontalAlignment="Left"  ></TextBlock>
                                                <Border Padding="0 0 10 0" BorderThickness="0,0,2,0" BorderBrush="#FFBDBDBD"  >
                                                    <TextBlock Style="{StaticResource InfoJob}" Text="{Binding Major}" ></TextBlock>
                                                </Border>
                                                <TextBlock Padding="10 0 0 0" Opacity="0.7" Text="Tính chất công việc:" Style="{StaticResource InfoJob}" ></TextBlock>
                                                <Border Padding="10 0" BorderThickness="0,0,2,0" BorderBrush="#FFBDBDBD"  >
                                                    <TextBlock Style="{StaticResource InfoJob}" Text="{Binding NatureOfJob}" ></TextBlock>
                                                </Border>
                                                <TextBlock Padding="10 0 0 0" Opacity="0.7" Text="Ngày đăng : " Style="{StaticResource InfoJob}" ></TextBlock>
                                                <TextBlock Style="{StaticResource InfoJob}" Text="{Binding Timeregister}" ></TextBlock>
                                            </WrapPanel>

                                        </Grid>
                                    </Grid>

                                    <!--Button-->
                                    <Grid Grid.Column="2">
                                        <Grid.Background>
                                            <SolidColorBrush Color="White" Opacity="0.9"/>
                                        </Grid.Background>
                                        <StackPanel Orientation="Horizontal">
                                            <ToggleButton x:Name="toggle"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.SaveJobCommand}"
                                                    CommandParameter="{Binding Path=Id}"
                                                    >
                                                <materialDesign:PackIcon Kind="HeartOutline" Height="30" Width="30" >
                                                </materialDesign:PackIcon>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Checked">
                                                        <i:InvokeCommandAction  Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.CheckedCommand}"
                                                                                    CommandParameter="{Binding ElementName=toggle}">

                                                        </i:InvokeCommandAction>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="Unchecked">
                                                        <i:InvokeCommandAction  Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.UnCheckedCommand}"
                                                                                    CommandParameter="{Binding ElementName=toggle}">
                                                        </i:InvokeCommandAction>
                                                    </i:EventTrigger>

                                                </i:Interaction.Triggers>
                                                <ToggleButton.Style>
                                                    <Style  TargetType="ToggleButton">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=SaveToggle, Path=IsChecked }" Value="True">
                                                                <Setter Property="IsChecked" Value="True"></Setter>
                                                                <Setter Property="Background" Value="Orange" />
                                                                <Setter Property="Foreground" Value="Red" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Background" Value="Orange" />
                                                        <Setter Property="Foreground" Value="Red" />
                                                        <Setter Property="Width" Value="40"/>
                                                        <Setter Property="Height" Value="40"/>
                                                        <Setter Property="FontSize" Value="18"/>
                                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                        <Setter Property="Padding" Value="0"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Grid ClipToBounds="True" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0" To="0.23" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                <VisualStateGroup.Transitions>
                                                                                    <VisualTransition From="*" To="Checked">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="CheckedEllipseScale">
                                                                                                <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0" />
                                                                                                <LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.1" />
                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                            <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="CheckedEllipseScale">
                                                                                                <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0" />
                                                                                                <LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.1" />
                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                    <VisualTransition From="Checked" To="Unchecked">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="CheckedEllipseScale">
                                                                                                <LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.0" />
                                                                                                <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                            <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="CheckedEllipseScale">
                                                                                                <LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.0" />
                                                                                                <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                </VisualStateGroup.Transitions>
                                                                                <VisualState x:Name="Checked">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="CheckedEllipseScale" To="1.0" />
                                                                                        <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="CheckedEllipseScale" To="1.0" />
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Unchecked">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="CheckedEllipseScale" To="0" />
                                                                                        <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="CheckedEllipseScale" To="0" />
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <Ellipse Fill="Transparent" x:Name="HoverEllipse" Stroke="Transparent" StrokeThickness="1" />
                                                                        <Ellipse Fill="{TemplateBinding Background}" x:Name="CheckedEllipse" RenderTransformOrigin="0.5, 0.5">
                                                                            <Ellipse.RenderTransform>
                                                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.0" ScaleY="1.0" x:Name="CheckedEllipseScale"/>
                                                                            </Ellipse.RenderTransform>
                                                                        </Ellipse>
                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter Property="Stroke" TargetName="HoverEllipse" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>

                                                    </Style>

                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <TextBlock Text="Lưu" FontSize="23" Height="30" Width="40" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=toggle, Path=IsChecked}" Value="True">
                                                                <Setter Property="Foreground" Value="Red"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </Grid>
                                    <Grid Grid.Column="3">
                                        <Grid.Background>
                                            <SolidColorBrush Color="White" Opacity="0.9"/>
                                        </Grid.Background>
                                        <Button  
                                            Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.InformationJobCommand}"
                                            CommandParameter="{Binding Path=Id}"
                                            ToolTip="Xem chi tiết công việc"  FontSize="20" Height="40" Width="110" BorderThickness="0" Style="{StaticResource btnSave}" >
                                            <StackPanel Orientation="Horizontal">
                                                <materialDesign:PackIcon Kind="Notebook" Height="30" Width="30" />
                                                <TextBlock Padding="0 2 0 0" Text="Chi tiết" FontSize="23" Height="30" Width="75" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                </TextBlock>
                                            </StackPanel>
                                        </Button>
                                    </Grid>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Grid>
        <!--<Grid Grid.Row="4" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Button Command="{Binding InformationMemberCommand}"
                    Grid.Column="0" Content="Thông tin cá nhân"                   
                    Width="300"
                    Height="50"                  
                    FontSize="25" Background="#FF56BB3F"/>
            <Button Grid.Column="1" Content="Danh sách công việc"                    
                    Width="300"
                    Height="50"
                    FontSize="25"
                    Command="{Binding ListJobCommand,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}"
                    Background="#FF56BB3F" 
                    >
            </Button>
            <Button x:Name="btn" 
                Grid.Column="2" Content="Chi tiết công việc"
                    Command="{Binding InformationJobCommand,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}"
                    CommandParameter="{Binding ElementName=mainWindow}"
                    Width="300"
                    Height="50"
                    FontSize="25"
                    Background="#FF56BB3F"
                    >
            </Button>
        </Grid>-->
    </Grid>
</Window>

