//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemoJob.Model
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;

    public partial class Job
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Job()
        {
            this.Registers = new HashSet<Register>();
        }
    
        public int Id { get; set; }
        public int IdCompany { get; set; }
        public string TypeJob { get; set; }
        public string NatureOfJob { get; set; }
        public string Major { get; set; }
        public string Place { get; set; }
        public string Request { get; set; }
        public string Descriptions { get; set; }
        public string MoreInfo { get; set; }
        public string Title { get; set; }
        public string Salary { get; set; }
        public string Timeregister { get; set; }
        public string Link { get; set; }


        public int GetIntSalary()
        {
            string tempString = "";

            // Vòng lặp cắt chuỗi Salary sang số
            foreach (var item1 in Salary)
            {
                if (item1 >= '0' && item1 <= '9')
                    tempString = String.Concat(tempString, item1);
            }

            int intSalary = 0;
            if (tempString != "")
            {
                intSalary = int.Parse(tempString);
            }
            else
            {
                intSalary = 0;
            }
            return intSalary;
        }

        public DateTime GetTimeRegister()
        {
            DateTime dateTime = DateTime.Now;
            if (Timeregister != null)
            {
                try
                {
                    dateTime = DateTime.ParseExact(
                            s: Timeregister,
                            format: "d/M/yyyy",
                            provider: CultureInfo.InvariantCulture);
                }
                catch (Exception e)
                {

                }
                return dateTime;
            }

            return new DateTime(2019, 1, 1);
        }
        public virtual Company Company { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Register> Registers { get; set; }
    }
}
